Обозначения, стиль и нотация

Правила:
* чьё + что + ...
* Чем длинее имя, чем реже используется и глобальнее обозначение.
* 4 пробела
* PEP8
* выравние присваений
* слова Total, All, Index и подобные частицы выносить в конец имени
baa       = 2
foo       = 6
word_WADA = -1
* словарь лучше списка
* в случае, когда нельзя передат по соварю - использовать строку с разделетилем @!@
* синонимы классов можно делать маленькими буквами (cmd, cnts, prt)
* не выносить переменные, которые есть только в рамках одной функции в свойства класса
* список аргументов разбивать по строкам, если аргуметов много и есть смысл все их пояснять
def asd\
    (
    foo = 0,
    bar = 8,
    baz = 8
    )
? выносить в начало функции объявление всех переменных встречающихся ниже

Чьё:
Клиент - Cl, Client, ARM
ПП - PP, PPost
Сервер - Svr, Server
Менеджер - Mng, Manager

Что где применяется:
Локальные, используемх в рамках одного-двух классов.
Cl, PP, Svr, Mng
Глобальные, используемых в разных классах и процессах программы
Client, PPost, Server, Manager

Что:
Очереди - Queue, Cache, Que, Cch
сообщение - mess, pkg, Message, Mess, msg
заголовочное сообщение - mainHeader, mHdr, mnHdr, ЗС - заголовочная структура

Сообщения:
mess, msg, pkg, prcl - одно конкретное сообщение
pack, message, parcl - цепочка сообщений

Нотации:
add_to_cache() - название функции
ClientCache - название модуля
Client_Cache - название класса
SIZE_BYTE - константа
num_ID_this_client - свойство класса и переменной (изменено 7.11.2016)
_mess_ - частные методы
__dont_it__ - системные методы
class_ - когда не смог придумать синоним слову "class"
ID, ARM, RubMQ, PGSSQL - сокращения - большими буквами

Класс Client
cache - кеш
client_Queue - очередь для клиентов
channel_Cache - канал для анализа кеша
channel_Queue - канал для анализа очереди


